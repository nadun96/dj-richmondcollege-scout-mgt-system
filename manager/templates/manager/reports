{% extends 'manager/base' %}
{{title}}
{% block content %}
{% load widget_tweaks %}

<div class="container-fluid">
    {%load crispy_forms_tags %}
    <div class="row">
        <div class="col-lg-4 col-sm-12 col-md-6 p-3">
            <div class="bg-info px-4 py-2 rounded-2">
                <h3 class="text-center"> Attendance </h3>
            </div>
            <div>

                <!-- mat from -->
                {{ matf.media }}
                <form action="" method="post" class="form my-4 px-2" enctype="" id="mat_form" onsubmit="">
                    <p><strong>Member Attendance</strong></p>
                    {% csrf_token %}
                    {{matf|crispy}}
                    <input type="submit" value="Download" class="btn btn-primary">
                </form>
                <!-- mat from script -->
                <script>
                    const matForm = document.querySelector('#mat_form');

                    matForm.addEventListener('submit', (event) => {
                        event.preventDefault();
                        
                        const matFormData = new FormData(matForm);

                        let reportName = 'Member Attendance Report';

                        matFormData.forEach((value, key) => {
                            console.log(key + ': ' + value);
                            if (key == 'member' ){
                                const memberSelect = document.querySelector('#mat_member');
                                const selectedOption = memberSelect.options[memberSelect.selectedIndex];
                                const displayedValue = selectedOption.textContent;
                                reportName += ` ${displayedValue} `;
                            }
                            if (key == 'year') {
                                reportName += ` ${value.substring(0, 4)} `;
                            }
                        });

                        console.log(matFormData);

                        fetch("{% url 'manager:member_attendance_report' %}", {
                            method: 'POST',
                            body: matFormData
                        })
                            .then((response) => {
                                if (response.ok) {
                                    return response.blob();
                                } else {
                                    console.error('Error:', error);
                                    $('.modal-body').html('There was an error with the form submission.');
                                    $('#modal-dialog').modal('show');
                                    throw new Error('Network response was not ok.');
                                }
                            })
                            .then((data) => {
                                // Create a URL for the blob object and download it
                                const pdfUrl = URL.createObjectURL(data);
                                const a = document.createElement('a');
                                a.href = pdfUrl;
                                a.download = reportName+'.pdf';
                                a.click();
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                                $('.modal-body').html('There was an error with the form submission.');
                                $('#modal-dialog').modal('show');
                            });
                    });

                </script>
            </div>
            <div>
                <!-- patrol Attendance form -->
                <form action="" method="post" class="form my-4 px-2" enctype="" id="pat_form" onsubmit="">
                    <p><strong>Patrol Attendance</strong></p>
                    {% csrf_token %}
                    {{patf|crispy}}
                    <input type="submit" value="Download" class="btn btn-primary">
                </form>
                <!-- pat from script -->
                <script>
                    const patForm = document.querySelector('#pat_form');

                    patForm.addEventListener('submit', (event) => {
                        event.preventDefault();

                        const patFormData = new FormData(patForm);
                        let reportName = 'Patrol Attendance Report';

                        patFormData.forEach((value, key) => {
                            console.log(key + ': ' + value);

                            if(key == 'patrol'){
                                const patrolSelect = document.querySelector('#pat_patrol');
                                const selectedOption = patrolSelect.options[patrolSelect.selectedIndex];
                                const displayedValue = selectedOption.textContent;
                                reportName += ` ${displayedValue} `;
                            }
                            if (key == 'year') {
                                reportName += ` ${value.substring(0, 4)} `;
                            }            
                        });

                        console.log(patFormData);

                        fetch("{% url 'manager:patrol_attendance_report' %}", {
                            method: 'POST',
                            body: patFormData
                        })
                            .then((response) => {
                                if (response.ok) {
                                    return response.blob();
                                } else {
                                     console.error('Error:', error);
                                    $('.modal-body').html('There was an error with the form submission.');
                                    $('#modal-dialog').modal('show');
                                    throw new Error('Network response was not ok.');                           
                                }
                            })
                            .then((data) => {
                                // Create a URL for the blob object and download it
                                const pdfUrl = URL.createObjectURL(data);
                                const a = document.createElement('a');
                                a.href = pdfUrl;
                                a.download = 'patrol attendance_report.pdf';
                                a.click();
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                                $('.modal-body').html('There was an error with the form submission.');
                                $('#modal-dialog').modal('show');
                            });
                    });

                </script>
            </div>
            
        </div>
        <div class=" col-lg-4 col-sm-12 col-md-6 p-3">
            <div class="bg-info px-4 py-2 rounded-2">
                <h3 class="text-center">Membership</h3>
            </div>
            <div>
                <!-- membership year select from -->
                <form action="" method="post" class="form my-4 px-2" enctype="multipart/form-data" onsubmit=""
                id="myf_form">
                <p><strong>Membership Paid Report</strong></p>
                {{myf.media}}
                {% csrf_token %}
                {{myf|crispy}}
                <input type="submit" value="Download" class="btn btn-primary">
            </form>
        </div>
        <!-- membership year select from from script -->
        <script>
                    const myfForm = document.querySelector('#myf_form');

                    myfForm.addEventListener('submit', (event) => {
                        event.preventDefault();

                        const myfFormData = new FormData(myfForm);

                        let reportName = 'Membership Paid Report';

                        myfFormData.forEach((value, key) => {
                            console.log(key + ': ' + value);
                            if(key == 'year'){
                                reportName += ` ${value.substring(0, 4)} `;
                            }
                        });

                        

                        console.log(myfFormData);

                        console.log(reportName);

                        fetch("{% url 'manager:membership_fee_paid_report' %}", {
                            method: 'POST',
                            body: myfFormData

                        })
                            .then((response) => {
                                if (response.ok) {
                                    return response.blob();
                                } else {
                                    console.error('Error:', error);
                                    $('.modal-body').html('There was an error with the form submission.');
                                    $('#modal-dialog').modal('show');
                                    throw new Error('Network response was not ok.');
                                }
                            })
                            .then((data) => {
                                // Create a URL for the blob object and download it
                                const pdfUrl = URL.createObjectURL(data);
                                const a = document.createElement('a');
                                a.href = pdfUrl;
                                a.download = reportName+'.pdf';
                                a.click();
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                                $('.modal-body').html('There was an error with the form submission.');
                                $('#modal-dialog').modal('show');
                            });
                    });

            </script>

        </div>
        <div class="col-lg-4 col-sm-12 col-md-6 p-3">
            <div class="bg-info px-4 py-2 rounded-2">
                <h3 class="text-center">Events</h3>
            </div>
            <div>
                <!-- event year select from -->
                <form action="" method="post" class="form my-4 px-2" enctype="multipart/form-data" onsubmit=""
                    id="elr_form">
                    <p><strong>Event List Report</strong></p>
                    {{myf.media}}
                    {% csrf_token %}
                    {{myf|crispy}}
                    <input type="submit" value="Download" class="btn btn-primary">
                </form>
            </div>

            <!-- event year select from from script -->
            <script>

                const elrForm = document.querySelector('#elr_form');

                elrForm.addEventListener('submit', (event) => {
                    event.preventDefault();

                    const elrFormData = new FormData(elrForm);

                    let reportName = 'Event List Report Paid Report';

                    elrFormData.forEach((value, key) => {
                        console.log(key + ': ' + value);
                        if(key == 'year'){
                            reportName += ` ${value.substring(0, 4)} `;
                        }
                    });
                    
                    console.log(elrFormData);

                    fetch("{% url 'manager:event_list_report' %}", {
                        method: 'POST',
                        body: elrFormData

                    })
                        .then((response) => {
                            if (response.ok) {
                                return response.blob();
                            } else {
                                console.error('Error:', error);
                                $('.modal-body').html('There was an error with the form submission.');
                                $('#modal-dialog').modal('show');
                                throw new Error('Network response was not ok.');
                            }
                        })
                        .then((data) => {
                            // Create a URL for the blob object and download it
                            const pdfUrl = URL.createObjectURL(data);
                            const a = document.createElement('a');
                            a.href = pdfUrl;
                            a.download = reportName+'.pdf';
                            a.click();
                        })
                        .catch((error) => {
                            console.error('Error:', error);
                            $('.modal-body').html('There was an error with the form submission.');
                            $('#modal-dialog').modal('show');
                        });
                });

            </script>
            
                <div>
                    <!-- event Attendance form -->
                    <form action="" method="post" class="form my-4 px-2" enctype="" id="eat_form" onsubmit="">
                        <p><strong>Event Attendance</strong></p>
                        <p>* if no titles are selected you will get saturday attendance report</p>
                        {{eatf.media}}
                        {% csrf_token %}
                        {{eatf|crispy}}
                        <input type="submit" value="Download" class="btn btn-primary">
                    </form>
                    <!-- eat from script -->
                    <script>

                        const eatForm = document.querySelector('#eat_form');
                
                        eatForm.addEventListener('submit', (event) => {
                            event.preventDefault();
                
                            const eatFormData = new FormData(eatForm);

                            let reportName = 'Event Attendance Report';
                
                            eatFormData.forEach((value, key) => {

                                console.log(key + ': ' + value);

                                if(key == 'title'){
                                    reportName += ` ${value} `;
                                }
                                if(key == 'year'){
                                    reportName += ` ${value.substring(0, 4)} `;
                                }

                            });
                
                            console.log(eatFormData);
                
                            fetch("{% url 'manager:events_attendance_report' %}", {
                                method: 'POST',
                                body: eatFormData
                
                            })
                                .then((response) => {
                                    if (response.ok) {
                                        return response.blob();
                                    } else {
                                        console.error('Error:', error);
                                        $('.modal-body').html('There was an error with the form submission.');
                                        $('#modal-dialog').modal('show');
                                        throw new Error('Network response was not ok.');
                                    }
                                })
                                .then((data) => {
                                    // Create a URL for the blob object and download it
                                    const pdfUrl = URL.createObjectURL(data);
                                    const a = document.createElement('a');
                                    a.href = pdfUrl;
                                    a.download = reportName+'.pdf';
                                    a.click();
                                })
                                .catch((error) => {
                                    console.error('Error:', error);
                                    $('.modal-body').html('There was an error with the form submission.');
                                    $('#modal-dialog').modal('show');
                                });
                        });
                
                    </script>
                </div>

            


        </div>

    </div>
</div>

<!-- selectize -->
<script>
    $(document).ready(function () {
        $('.selectize').selectize();
    });
</script>

<!-- close modal because I prevented default -->
<script>
    $(document).ready(function () {
        $('#close-modal').on('click', function () {
            $('#modal-dialog').modal('hide');
        });
    });
</script>

<!-- jason model dialog box -->
<div class="modal" tabindex="-1" role="dialog" id="modal-dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Feedback</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Modal content goes here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="close-modal" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

{% endblock %}